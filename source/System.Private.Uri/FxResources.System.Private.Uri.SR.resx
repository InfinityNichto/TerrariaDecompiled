<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
<resheader name="resmimetype"><value>text/microsoft-resx</value></resheader><resheader name="version"><value>1.3</value></resheader><resheader name="reader"><value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader><resheader name="writer"><value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader><data name="net_uri_UserDrivenParsing" xml:space="preserve"><value>A derived type '{0}' is responsible for parsing this Uri instance. The base implementation must not be used.</value></data>
  <data name="InvalidNullArgument" xml:space="preserve"><value>Null is not a valid value for {0}.</value></data>
  <data name="net_uri_BadUnicodeHostForIdn" xml:space="preserve"><value>An invalid Unicode character by IDN standards was specified in the host.</value></data>
  <data name="net_uri_AlreadyRegistered" xml:space="preserve"><value>A URI scheme name '{0}' already has a registered custom parser.</value></data>
  <data name="net_uri_BadPort" xml:space="preserve"><value>Invalid URI: Invalid port specified.</value></data>
  <data name="net_uri_SchemeLimit" xml:space="preserve"><value>Invalid URI: The Uri scheme is too long.</value></data>
  <data name="net_uri_GetComponentsCalledWhenCanonicalizationDisabled" xml:space="preserve"><value>GetComponents() may not be used for Path/Query on a Uri instance created with UriCreationOptions.DangerousDisablePathAndQueryCanonicalization.</value></data>
  <data name="Argument_AddingDuplicate" xml:space="preserve"><value>An item with the same key has already been added. Key: {0}</value></data>
  <data name="net_uri_InitializeCalledAlreadyOrTooLate" xml:space="preserve"><value>UriParser's base InitializeAndValidate may only be called once on a single Uri instance and only from an override of InitializeAndValidate.</value></data>
  <data name="net_uri_BadHostName" xml:space="preserve"><value>Invalid URI: The hostname could not be parsed.</value></data>
  <data name="net_uri_EmptyUri" xml:space="preserve"><value>Invalid URI: The URI is empty.</value></data>
  <data name="net_uri_CannotCreateRelative" xml:space="preserve"><value>A relative URI cannot be created because the 'uriString' parameter represents an absolute URI.</value></data>
  <data name="net_uri_BadAuthority" xml:space="preserve"><value>Invalid URI: The Authority/Host could not be parsed.</value></data>
  <data name="net_uri_NotAbsolute" xml:space="preserve"><value>This operation is not supported for a relative URI.</value></data>
  <data name="net_uri_NeedFreshParser" xml:space="preserve"><value>The URI parser instance passed into 'uriParser' parameter is already registered with the scheme name '{0}'.</value></data>
  <data name="net_uri_NotJustSerialization" xml:space="preserve"><value>UriComponents.SerializationInfoString must not be combined with other UriComponents.</value></data>
  <data name="net_uri_BadScheme" xml:space="preserve"><value>Invalid URI: The URI scheme is not valid.</value></data>
  <data name="net_uri_BadString" xml:space="preserve"><value>Invalid URI: There is an invalid sequence in the string.</value></data>
  <data name="Argument_ExtraNotValid" xml:space="preserve"><value>Extra portion of URI not valid.</value></data>
  <data name="Arg_KeyNotFoundWithKey" xml:space="preserve"><value>The given key '{0}' was not present in the dictionary.</value></data>
  <data name="net_uri_BadAuthorityTerminator" xml:space="preserve"><value>Invalid URI: The Authority/Host cannot end with a backslash character ('\\').</value></data>
  <data name="net_uri_MustRootedPath" xml:space="preserve"><value>Invalid URI: A Dos path must be rooted, for example, 'c:\\'.</value></data>
  <data name="net_uri_InvalidUriKind" xml:space="preserve"><value>The value '{0}' passed for the UriKind parameter is invalid.</value></data>
  <data name="net_uri_SizeLimit" xml:space="preserve"><value>Invalid URI: The Uri string is too long.</value></data>
  <data name="net_uri_BadUserPassword" xml:space="preserve"><value>Invalid URI: The username:password construct is badly formed.</value></data>
  <data name="net_uri_BadFormat" xml:space="preserve"><value>Invalid URI: The format of the URI could not be determined.</value></data>
  <data name="Argument_InvalidUriSubcomponent" xml:space="preserve"><value>The subcomponent, {0}, of this uri is not valid.</value></data>
  <data name="net_uri_PortOutOfRange" xml:space="preserve"><value>A derived type '{0}' has reported an invalid value for the Uri port '{1}'.</value></data>
  </root>